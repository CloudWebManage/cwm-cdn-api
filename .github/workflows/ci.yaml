name: CI
on:
  push:
    paths-ignore:
      - .github/workflows/tenant-nginx-ci.yaml
      - tenant-nginx/**
      - tests/test_tenant_nginx*
      - .github/workflows/cache-nginx-ci.yaml
      - cache-nginx/**
      - tests/test_cache_nginx*
env:
  UV_VERSION: "0.8.8"
  PYTHON_VERSION: "3.12"
  KUBECTL_VERSION: "v1.33.1"
jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          version: ${{ env.UV_VERSION }}
      - uses: CloudWebManage/cwm-iac/actions/docker-build-push@main
        with:
          test_script: |
            uv sync
            E2E=yes uv run pytest
          image_suffix: cwm-cdn-api
          build_args: |
            PYTHON_VERSION=${{ env.PYTHON_VERSION }}
            UV_VERSION=${{ env.UV_VERSION }}
            KUBECTL_VERSION=${{ env.KUBECTL_VERSION }}
            VERSION=${{ github.sha }}
          deploy_key_b64: ${{ secrets.CWM_WORKER_CLUSTER_DEPLOY_KEY_B64 }}
          deploy_file_path: config/auto-updated/cwm-cdn-api/api.yaml
          deploy_content_template: |
            cwmCdnApi:
              api:
                image: "__IMAGE__"
          deploy_commit_message: "Update cwm-cdn-api/api"
          wait_for_deployment_json: |
            {
              "wait-for": [
                {
                  "type": "openapi_version",
                  "url": "${{ secrets.PRIMARY_API_URL }}",
                  "username": "${{ secrets.PRIMARY_API_USERNAME }}",
                  "password": "${{ secrets.PRIMARY_API_PASSWORD }}",
                  "expected_version": "${{ github.sha }}"
                },
                {
                  "type": "openapi_version",
                  "url": "${{ secrets.SECONDARY_API_URL }}",
                  "username": "${{ secrets.SECONDARY_API_USERNAME }}",
                  "password": "${{ secrets.SECONDARY_API_PASSWORD }}",
                  "expected_version": "${{ github.sha }}"
                }
              ]
            }
